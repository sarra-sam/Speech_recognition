# -*- coding: utf-8 -*-
"""Copie de Sppech recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w-1kwxDSFymPD45KV1ufK6_HBEjgyyxo
"""
import streamlit as st
import subprocess
import os
import speech_recognition as sr

def select_api():
    print("Select Speech Recognition API:")
    print("1. Google Speech Recognition")
    print("2. Sphinx (Offline)")
    choice = input("Enter choice (1/2): ")
    return "google" if choice == "1" else "sphinx"

def select_language():
    print("Enter language code (default = en-US):")
    print("Examples: en-US (English), fr-FR (French), ar-SA (Arabic)")
    lang = input("Language code: ").strip()
    return lang if lang else "en-US"

def transcribe_speech(api_choice, language):
    recognizer = sr.Recognizer()

    with sr.Microphone() as source:
        print("Adjusting for ambient noise... Please wait")
        recognizer.adjust_for_ambient_noise(source)
        print("Recording... (say 'pause' to pause and 'resume' to continue)")
        audio_data = recognizer.listen(source)

        try:
            if api_choice == "google":
                text = recognizer.recognize_google(audio_data, language=language)
            else:
                text = recognizer.recognize_sphinx(audio_data, language=language)
            print("Transcription:", text)
            return text

        except sr.UnknownValueError:
            print("❌ Could not understand the audio.")
        except sr.RequestError as e:
            print(f"⚠️ API request failed: {e}")
        except Exception as e:
            print(f"An unexpected error occurred: {e}")
        return None

def save_to_file(text):
    filename = input("Enter filename to save transcription (default: transcription.txt): ").strip()
    filename = filename if filename else "transcription.txt"
    with open(filename, "w", encoding="utf-8") as file:
        file.write(text)
    print(f"✅ Transcription saved to {filename}")

def main():
    api_choice = select_api()
    language = select_language()

    transcription = transcribe_speech(api_choice, language)
    if transcription:
        save = input("Do you want to save the transcription to a file? (y/n): ").lower()
        if save == "y":
            save_to_file(transcription)

if __name__ == "__main__":
    main()



